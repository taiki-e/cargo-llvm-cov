name: Release

permissions:
  contents: read

on:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash --noprofile --norc -CeEuxo pipefail {0}

jobs:
  create-release:
    if: github.repository_owner == 'taiki-e'
    uses: taiki-e/github-actions/.github/workflows/create-release.yml@main
    permissions:
      contents: write
    secrets: inherit

  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'taiki-e'
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu.2.27
            build-tool: cargo-zigbuild
          - target: aarch64-unknown-linux-musl
          - target: aarch64-apple-darwin
            os: macos-13
          - target: x86_64-unknown-linux-gnu.2.27
            build-tool: cargo-zigbuild
          - target: x86_64-unknown-linux-musl
          - target: x86_64-apple-darwin
            os: macos-13
          - target: x86_64-pc-windows-msvc
            os: windows-2019
          - target: x86_64-unknown-freebsd
          - target: universal-apple-darwin
            os: macos-13
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    timeout-minutes: 60
    permissions:
      contents: write
    steps:
      - uses: taiki-e/checkout-action@v1
      - uses: taiki-e/github-actions/install-rust@stable
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
      - run: printf '%s\n' "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >>"${GITHUB_ENV}"
        if: contains(matrix.target, '-windows-msvc')
      - run: printf '%s\n' "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static -C link-self-contained=yes" >>"${GITHUB_ENV}"
        if: contains(matrix.target, '-linux-musl')
      # https://doc.rust-lang.org/rustc/platform-support.html
      - run: printf 'MACOSX_DEPLOYMENT_TARGET=10.12\n' >>"${GITHUB_ENV}"
        if: matrix.target == 'x86_64-apple-darwin'
      - run: printf 'MACOSX_DEPLOYMENT_TARGET=11.0\n' >>"${GITHUB_ENV}"
        if: matrix.target == 'aarch64-apple-darwin' || matrix.target == 'universal-apple-darwin'
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: cargo-llvm-cov
          target: ${{ matrix.target }}
          build-tool: ${{ matrix.build-tool }}
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
